trigger:
  paths:
    include:
      - vote/*
      - result/*
      - worker/*

parameters:
  - name: appName
    type: string
    default: vote-app
    values:
      - vote-app
      - result-app
      - worker-app

  - name: repoName
    type: string
    default: My_Personal_Application

resources:
  - repo: self

variables:
  - group: docker-variables

  - name: imageTag
    value: $(Build.BuildId)

  # - name: appName
  #   value: vote-app

  - name: dockerUsername
    value: $(dockerHubUsername)

  - name: dockerImageName
    value: $(dockerUsername)/$(appName)

  - ${{ if eq(parameters.appName, 'vote-app') }}:
      - name: dockerfilePath
        value: vote/Dockerfile

  - ${{ if eq(parameters.appName, 'result-app') }}:
      - name: dockerfilePath
        value: result/Dockerfile

  - ${{ if eq(parameters.appName, 'worker-app') }}:
      - name: dockerfilePath
        value: worker/Dockerfile

  # - name: dockerfilePath
  #   value: >
  #     ${{ if eq(parameters.appName, 'vote-app') }} vote/Dockerfile
  #     ${{ if eq(parameters.appName, 'result-app') }} result/Dockerfile
  #     ${{ if eq(parameters.appName, 'worker-app') }} worker/Dockerfile

  # - name: dockerfilePath
  #   value: vote/Dockerfile

  # - name: repoName
  #   value: My_Personal_Application

pool:
  name: 'agentcicd'

# -----------------------------
# Stage: Build Docker Image
# -----------------------------
stages:
- stage: Build
  displayName: Build Docker Image
  jobs:
    - job: BuildJob
      displayName: Build Job
      steps:
        - task: Docker@2
          displayName: Build Docker Image
          inputs:
            command: 'build'
            containerRegistry: '$(dockerServiceConnection)'  # ✅ Needed to tag properly
            repository: '$(dockerImageName)'                 # ✅ Needed to tag properly
            Dockerfile: '$(dockerfilePath)'
            tags: '$(imageTag)'                              # e.g., 9881665778/vote-app:65

        - script: |
            docker images
            echo "✅ Docker image built and tagged as $(dockerImageName):$(imageTag)"
          displayName: Verify Docker Image

# -----------------------------
# Stage: Push Docker Image
# -----------------------------
- stage: Push
  displayName: Push Docker Image
  dependsOn: Build
  jobs:
    - job: PushJob
      displayName: Push Job
      steps:
        - task: Docker@2
          displayName: Login to Docker Hub
          inputs:
            command: login
            containerRegistry: '$(dockerServiceConnection)'

        - script: |
            docker push $(dockerImageName):$(imageTag)
          displayName: Push Docker Image

# -----------------------------
# Stage: Update K8s Manifest
# -----------------------------

- stage: Update
  displayName: Update Kubernetes Manifest
  dependsOn: Push
  jobs:
    - job: UpdateManifest
      displayName: Update Image Tag in K8s Manifest
      steps:
        - checkout: self
        - task: ShellScript@2
          displayName: Run Script to Update Manifest
          inputs:
            scriptPath: '$(updateScriptPath)'
            args: '$(appName) $(dockerUsername) $(imageTag) $(azureOrgName) $(projectName) $(repoName)'
          env:
            SYSTEM_ACCESSTOKEN: $(System.AccessToken)  # ✅ Only once here


# - stage: Update
#   displayName: Update Kubernetes Manifest
#   dependsOn: Push
#   jobs:
#     - job: UpdateManifest
#       displayName: Update Image Tag in K8s Manifest
#       steps:
#         - task: ShellScript@2
#           displayName: Run Script to Update Manifest
#           inputs:
#             scriptPath: '$(updateScriptPath)'
#             args: '$(appName) $(dockerUsername) $(imageTag)'


# trigger:
#   paths:
#     include:
#       - vote/*

# resources:
#   - repo: self

# variables:
#   - group: docker-variables
#   - name: imageTag
#     value: $(Build.BuildId)

#   - name: appName
#     value: vote-app

#   - name: dockerUsername
#     value: $(dockerHubUsername)

#   - name: dockerImageName
#     value: $(dockerUsername)/$(appName)

#   - name: dockerfilePath
#     value: vote/Dockerfile
  
#   # - name: repoName
#   #   value: vote-app

# pool:
#   name: 'agentcicd'

# stages:
# # -----------------------------
# # Stage: Push Docker Image
# # -----------------------------
# - stage: Build and Push
#   displayName: Push Docker Image
#   dependsOn: Build
#   jobs:
#     - job: PushJob
#       displayName: Push Docker Image
#       steps:
#         - task: Docker@2
#           displayName: Login, Build, and Push
#           inputs:
#             containerRegistry: '$(dockerServiceConnection)'
#             repository: '$(dockerImageName)'
#             command: 'buildAndPush'
#             Dockerfile: '$(dockerfilePath)'
#             tags: '$(imageTag)'

#         - script: |
#             docker images
#           displayName: Push Docker Image

# # -----------------------------
# # Stage: Update K8s Manifest
# # -----------------------------
# - stage: Update
#   displayName: Update Kubernetes Manifest
#   dependsOn: Push
#   jobs:
#     - job: UpdateManifest
#       displayName: Update Image Tag in K8s Manifest
#       steps:
#         - task: ShellScript@2
#           displayName: Run Script to Update Manifest
#           inputs:
#             scriptPath: '$(updateScriptPath)'
#             args: '$(appName) $(dockerUsername) $(imageTag)'
